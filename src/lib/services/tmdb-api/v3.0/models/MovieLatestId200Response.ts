/* tslint:disable */
/* eslint-disable */
/**
 * TMDB API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MovieLatestId200Response
 */
export interface MovieLatestId200Response {
    /**
     * 
     * @type {boolean}
     * @memberof MovieLatestId200Response
     */
    adult?: boolean;
    /**
     * 
     * @type {any}
     * @memberof MovieLatestId200Response
     */
    backdrop_path?: any;
    /**
     * 
     * @type {any}
     * @memberof MovieLatestId200Response
     */
    belongs_to_collection?: any;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    budget?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovieLatestId200Response
     */
    genres?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    homepage?: string;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    id?: number;
    /**
     * 
     * @type {any}
     * @memberof MovieLatestId200Response
     */
    imdb_id?: any;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    original_language?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    original_title?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    overview?: string;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    popularity?: number;
    /**
     * 
     * @type {any}
     * @memberof MovieLatestId200Response
     */
    poster_path?: any;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovieLatestId200Response
     */
    production_companies?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovieLatestId200Response
     */
    production_countries?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    release_date?: string;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    revenue?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    runtime?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovieLatestId200Response
     */
    spoken_languages?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    tagline?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieLatestId200Response
     */
    title?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MovieLatestId200Response
     */
    video?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    vote_average?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieLatestId200Response
     */
    vote_count?: number;
}

/**
 * Check if a given object implements the MovieLatestId200Response interface.
 */
export function instanceOfMovieLatestId200Response(value: object): value is MovieLatestId200Response {
    return true;
}

export function MovieLatestId200ResponseFromJSON(json: any): MovieLatestId200Response {
    return MovieLatestId200ResponseFromJSONTyped(json, false);
}

export function MovieLatestId200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovieLatestId200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'adult': json['adult'] == null ? undefined : json['adult'],
        'backdrop_path': json['backdrop_path'] == null ? undefined : json['backdrop_path'],
        'belongs_to_collection': json['belongs_to_collection'] == null ? undefined : json['belongs_to_collection'],
        'budget': json['budget'] == null ? undefined : json['budget'],
        'genres': json['genres'] == null ? undefined : json['genres'],
        'homepage': json['homepage'] == null ? undefined : json['homepage'],
        'id': json['id'] == null ? undefined : json['id'],
        'imdb_id': json['imdb_id'] == null ? undefined : json['imdb_id'],
        'original_language': json['original_language'] == null ? undefined : json['original_language'],
        'original_title': json['original_title'] == null ? undefined : json['original_title'],
        'overview': json['overview'] == null ? undefined : json['overview'],
        'popularity': json['popularity'] == null ? undefined : json['popularity'],
        'poster_path': json['poster_path'] == null ? undefined : json['poster_path'],
        'production_companies': json['production_companies'] == null ? undefined : json['production_companies'],
        'production_countries': json['production_countries'] == null ? undefined : json['production_countries'],
        'release_date': json['release_date'] == null ? undefined : json['release_date'],
        'revenue': json['revenue'] == null ? undefined : json['revenue'],
        'runtime': json['runtime'] == null ? undefined : json['runtime'],
        'spoken_languages': json['spoken_languages'] == null ? undefined : json['spoken_languages'],
        'status': json['status'] == null ? undefined : json['status'],
        'tagline': json['tagline'] == null ? undefined : json['tagline'],
        'title': json['title'] == null ? undefined : json['title'],
        'video': json['video'] == null ? undefined : json['video'],
        'vote_average': json['vote_average'] == null ? undefined : json['vote_average'],
        'vote_count': json['vote_count'] == null ? undefined : json['vote_count'],
    };
}

export function MovieLatestId200ResponseToJSON(value?: MovieLatestId200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'adult': value['adult'],
        'backdrop_path': value['backdrop_path'],
        'belongs_to_collection': value['belongs_to_collection'],
        'budget': value['budget'],
        'genres': value['genres'],
        'homepage': value['homepage'],
        'id': value['id'],
        'imdb_id': value['imdb_id'],
        'original_language': value['original_language'],
        'original_title': value['original_title'],
        'overview': value['overview'],
        'popularity': value['popularity'],
        'poster_path': value['poster_path'],
        'production_companies': value['production_companies'],
        'production_countries': value['production_countries'],
        'release_date': value['release_date'],
        'revenue': value['revenue'],
        'runtime': value['runtime'],
        'spoken_languages': value['spoken_languages'],
        'status': value['status'],
        'tagline': value['tagline'],
        'title': value['title'],
        'video': value['video'],
        'vote_average': value['vote_average'],
        'vote_count': value['vote_count'],
    };
}

